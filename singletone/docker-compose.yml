services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: singletone
      POSTGRES_PASSWORD: singletonepass
      POSTGRES_DB: singletone
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - singletone-network

  # MongoDB para music
  mongo-music:
    image: mongo:6
    container_name: mongo-music
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./docker/mongo/music-init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - singletone-network

  # MongoDB para library
  mongo-library:
    image: mongo:6
    container_name: mongo-library
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - ./docker/mongo/library-init.js:/docker-entrypoint-initdb.d/init.js
    networks:
      - singletone-network

  # Redis para cada microservicio
  redis-user:
    image: redis:7
    container_name: redis-user
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - ./docker/redis/redis-user.conf:/usr/local/etc/redis/redis.conf
    networks:
      - singletone-network

  redis-profile:
    image: redis:7
    container_name: redis-profile
    restart: always
    ports:
      - "6381:6379"
    volumes:
      - ./docker/redis/redis-profile.conf:/usr/local/etc/redis/redis.conf
    networks:
      - singletone-network

  redis-music:
    image: redis:7
    container_name: redis-music
    restart: always
    ports:
      - "6382:6379"
    volumes:
      - ./docker/redis/redis-music.conf:/usr/local/etc/redis/redis.conf
    networks:
      - singletone-network

  redis-library:
    image: redis:7
    container_name: redis-library
    restart: always
    ports:
      - "6383:6379"
    volumes:
      - ./docker/redis/redis-library.conf:/usr/local/etc/redis/redis.conf
    networks:
      - singletone-network

  redis-recommendation:
    image: redis:7
    container_name: redis-recommendation
    restart: always
    ports:
      - "6384:6379"
    volumes:
      - ./docker/redis/redis-recommendation.conf:/usr/local/etc/redis/redis.conf
    networks:
      - singletone-network

  redis-plan:
    image: redis:7
    container_name: redis-plan
    restart: always
    ports:
      - "6385:6379"
    volumes:
      - ./docker/redis/redis-plan.conf:/usr/local/etc/redis/redis.conf
    networks:
      - singletone-network

  redis-gateway:
    image: redis:7
    container_name: redis-gateway
    restart: always
    ports:
      - "6386:6379"
    volumes:
      - ./docker/redis/redis-gateway.conf:/usr/local/etc/redis/redis.conf
    networks:
      - singletone-network

  # Gateway NGINX
  nginx:
    image: nginx:latest
    container_name: apigateway
    ports:
      - "8080:80"  # CAMBIADO AQU√ç üî•
    volumes:
      - ./apps/apigateway/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./apps/apigateway/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - user-service
    networks:
      - singletone-network

  # Microservicio: User
  user-service:
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis-user
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=singletone
      - POSTGRES_PASSWORD=singletonepass
      - POSTGRES_DB=singletone
      - REDIS_HOST=redis-user
      - REDIS_PORT=6379
    networks:
      - singletone-network

  # Microservicio: Profile
  profile-service:
    build:
      context: .
      dockerfile: apps/profile-service/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - redis-profile
      - user-service
    environment:
      - PORT=3001
      - REDIS_HOST=redis-profile
      - REDIS_PORT=6379
      - USER_SERVICE_URL=http://user-service:3000
    networks:
      - singletone-network

  # Microservicio: Plan
  plan-service:
    build:
      context: .
      dockerfile: apps/plan-service/Dockerfile
    ports:
      - "3004:3004"
    depends_on:
      - redis-plan
    environment:
      - PORT=3004
      - REDIS_HOST=redis-plan
      - REDIS_PORT=6379
    networks:
      - singletone-network

  # Microservicio: Recommendation
  recommendation-service:
    build:
      context: .
      dockerfile: apps/recommendation-service/Dockerfile
    ports:
      - "3006:3006"
    depends_on:
      - redis-recommendation
    environment:
      - PORT=3006
      - REDIS_HOST=redis-recommendation
      - REDIS_PORT=6379
    networks:
      - singletone-network

  # Microservicio: Music
  music-service:
    build:
      context: .
      dockerfile: apps/music-service/Dockerfile
    ports:
      - "3002:3002"
    depends_on:
      - mongo-music
      - redis-music
    environment:
      - PORT=3002
      - MONGO_HOST=mongo-music
      - MONGO_PORT=27017
      - MONGO_DB=music
      - REDIS_HOST=redis-music
      - REDIS_PORT=6379
    networks:
      - singletone-network

  # Microservicio: Library
  library-service:
    build:
      context: .
      dockerfile: apps/library-service/Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      - mongo-library
      - redis-library
    environment:
      - PORT=3003
      - MONGO_HOST=mongo-library
      - MONGO_PORT=27017
      - MONGO_DB=library
      - REDIS_HOST=redis-library
      - REDIS_PORT=6379
    networks:
      - singletone-network

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: singletone-frontend
    restart: unless-stopped
    depends_on:
      - nginx
    ports:
      - "4200:4200"
    networks:
      - singletone-network

networks:
  singletone-network:
    driver: bridge